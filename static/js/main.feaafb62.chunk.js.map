{"version":3,"sources":["components/nav/Nav.js","components/product/ProductItems.js","components/filter/Filter.js","components/product/Products.js","components/basket/Basket.js","App.js","serviceWorker.js","index.js"],"names":["Nav","className","href","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","ProductItems","allProducts","this","props","map","product","index","key","src","sku","height","title","price","onClick","handleAddToCart","Component","Filter","count","onChange","handleChangeSort","value","sort","Products","state","products","filterdProducts","loading","componentDidMount","axios","get","then","res","data","setState","catch","error","console","log","cartItems","productAlreadyInCart","forEach","item","push","updateCartItems","e","target","listProducts","a","b","length","Basket","handleRemoveFromCart","reduce","total","toFixed","App","items","localStorage","setItem","JSON","stringify","newItems","splice","indexOf","parse","getItem","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.feaafb62.chunk.js","sourcesContent":["import React from 'react';\r\n\r\n\r\nfunction Nav() {\r\n  return (\r\n\r\n      <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\r\n        <a className=\"navbar-brand\" href=\"#\">Logo</a>\r\n        <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n          <span className=\"navbar-toggler-icon\"></span>\r\n        </button>\r\n\r\n        <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n          <ul className=\"navbar-nav ml-auto\">\r\n            <li className=\"nav-item active\">\r\n              <a className=\"nav-link\" href=\"#\">Home <span className=\"sr-only\">(current)</span></a>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <a className=\"nav-link\" href=\"#\">Products</a>\r\n            </li>\r\n\r\n            <li className=\"nav-item\">\r\n              <a className=\"nav-link\" href=\"#\">About</a>\r\n            </li>\r\n\r\n            <li className=\"nav-item\">\r\n              <a className=\"nav-link\" href=\"#\">Cart</a>\r\n            </li>\r\n        \r\n          \r\n          </ul>\r\n      \r\n        </div>\r\n      </nav>\r\n\r\n\r\n  );\r\n}\r\n\r\nexport default Nav;\r\n","import React, { Component } from 'react';\r\nimport './productitem.css';\r\n\r\n// components \r\n\r\n\r\n\r\nclass ProductItems extends Component {\r\n\r\n\r\n  render()\r\n  {\r\n    const allProducts = this.props.allProducts\r\n    \r\n\r\n    // console.log(contProducts)\r\n    return (\r\n        <div className=\"row\">\r\n            { allProducts.map((product,index)=> {\r\n        // console.log(product)\r\n        return (<div className=\"col-md-4 p-2 mb-3\" key={index}>\r\n                    <div className=\"text-center border\">\r\n                        <div className=\"thumbnail text-center pointer\" >\r\n                            <img src={'products/'+product.sku+'_1.jpg'} height=\"300\" className=\"mt-3\" />\r\n                        </div>\r\n                        <h5>{product.title} </h5>\r\n                        <h5>{product.price} $</h5>\r\n                        <button className=\"btn btn-primary mt-2 mb-2\" \r\n                        onClick={()=>{this.props.handleAddToCart(product)}}> Add To Cart <i className=\"fa fa-plus\"></i> </button>\r\n                    \r\n                    </div>\r\n                </div>)\r\n        \r\n                })}\r\n        </div>\r\n    );\r\n  }\r\n  \r\n}\r\n\r\nexport default ProductItems;\r\n","import React, { Component } from 'react';\r\n\r\n\r\n\r\nclass Filter extends Component {\r\n\r\n\r\n  \r\n\r\n  render()\r\n  {\r\n    return (\r\n      <div className=\"row\">\r\n        <div className=\"col-md-4\">\r\n            {this.props.count} Product Found\r\n        </div>\r\n        <div className=\"col-md-8\">\r\n            <label>Sort By</label>\r\n            <select onChange={this.props.handleChangeSort} value={this.props.sort} className=\"form-control\">\r\n                <option value=\"\"> Select </option>\r\n                <option value=\"lowest\"> Lowest To Heighest </option>\r\n                <option value=\"heighest\"> Heighest To Lowest </option>\r\n            </select>\r\n        </div>\r\n\r\n        {/* <div className=\"col-md-4\">\r\n            <label>Filter By Size</label>\r\n            <select onChange={this.props.handleChangeSize} value={this.props.size} className=\"form-control\">\r\n                <option value=\"\"> All </option>\r\n                <option value=\"xs\"> XS </option>\r\n                <option value=\"s\"> S </option>\r\n                <option value=\"m\"> M </option>\r\n                <option value=\"l\"> L </option>\r\n                <option value=\"xl\"> XL </option>\r\n                <option value=\"xxl\"> XXL </option>\r\n            </select>\r\n        </div> */}\r\n\r\n\r\n      </div>\r\n    );\r\n  }\r\n  \r\n}\r\n\r\nexport default Filter;\r\n","import React, { Component, Fragment } from 'react';\r\nimport axios from 'axios';\r\n\r\n// components \r\nimport ProductItems from './ProductItems';\r\nimport Filter from '../filter/Filter';\r\n\r\n\r\nclass Products extends Component {\r\n\r\n    \r\n    state = {\r\n        products:[],\r\n        filterdProducts:[],\r\n        loading:false,\r\n      }\r\n\r\n    componentDidMount = () =>\r\n    {\r\n        axios.get(\"http://localhost:3000/db.json\").then((res) => \r\n        {\r\n             const {products} = res.data;\r\n             this.setState({\r\n                 products:products,\r\n                 filterdProducts:products,\r\n                 loading:true\r\n             })\r\n\r\n            //  console.log(products)\r\n        }).catch((error) => console.log(error))\r\n    }\r\n\r\n    handleAddToCart = (product) => {\r\n        // console.log(product)\r\n        this.setState(state => {\r\n            const cartItems = this.props.cartItems;\r\n            let productAlreadyInCart = false;\r\n            cartItems.forEach(item => {\r\n                if(item.id === product.id)\r\n                {\r\n                    productAlreadyInCart = true;\r\n                    item.count++;\r\n                    // console.log(item) \r\n                }\r\n            });\r\n            if(!productAlreadyInCart)\r\n            {\r\n                cartItems.push({...product,count:1})\r\n            }\r\n            // update cart items at app file \r\n            this.props.updateCartItems(cartItems);\r\n\r\n            return cartItems;\r\n        })\r\n    }\r\n\r\n\r\n    // sort by price\r\n    handleChangeSort = (e) =>{\r\n        this.setState({sort:e.target.value})\r\n        this.listProducts();\r\n    }\r\n    // sort by size\r\n    // handleChangeSize = (e) =>{\r\n    //     this.setState({size:e.target.value})\r\n    //     this.listProducts();\r\n    // }\r\n\r\n    listProducts = ()=>\r\n    {\r\n        this.setState(state =>{\r\n            if(state.sort !== '')\r\n            {\r\n                // state.products.sort((a,b)=>{(state.sort ==='lowest') ? (a.price < b.price ? 1:-1 ) : (a.price > b.price ? 1:-1 )} );\r\n                if(state.sort ==='lowest')\r\n                {\r\n                    state.products.sort((a,b)=>(a.price > b.price ? 1:-1 ));\r\n                }\r\n                else \r\n                {\r\n                    state.products.sort((a,b)=>(a.price < b.price ? 1:-1 ));\r\n                }\r\n                \r\n            }\r\n            // if(state.size !== '')\r\n            // {\r\n            //     return {\r\n            //         filterdProducts:state.products.filter(a => a.availableSizes.indexOf(state.size.toUpperCase())>=0)\r\n            //     }\r\n            // }\r\n            else \r\n            {\r\n                state.products.sort((a,b)=>(a.id < b.id  ? 1:-1 ));\r\n            }\r\n\r\n            \r\n            return {filterdProducts:state.products}\r\n        })\r\n    }\r\n\r\n\r\n    \r\n    render()\r\n    {\r\n        if(this.state.loading)\r\n        {\r\n            return (\r\n                <Fragment>\r\n                <Filter sort={this.state.sort} \r\n                    handleChangeSort={this.handleChangeSort}  \r\n                    count={this.state.filterdProducts.length} />\r\n                    <hr />\r\n                 \r\n                <ProductItems allProducts={this.state.products} handleAddToCart={this.handleAddToCart}  /> \r\n                </Fragment>\r\n            );\r\n        }\r\n        else\r\n        {\r\n            return <div></div>\r\n        }\r\n        \r\n    }\r\n \r\n}\r\n\r\nexport default Products;\r\n","import React, { Component } from 'react'\r\nimport './basket.css'\r\n\r\nexport default class Basket extends Component {\r\n\r\n\r\n    // showItems = (cartItems) => \r\n    // {\r\n    //     cartItems.length > 0 && cartItems.map(item =>{\r\n                    \r\n    //         <li>\r\n    //             <b>{item.title}</b>\r\n    //             <button className=\"btn btn-danger \"> <i className=\"fa fa-trash\"></i> </button>\r\n    //         </li>\r\n\r\n    //     })\r\n    // }\r\n\r\n    render() {\r\n\r\n        const {cartItems} = this.props;\r\n\r\n        \r\n\r\n        return (\r\n            <div className=\"alert alert-info text-center mt-3\">\r\n              \r\n                { cartItems.length === 0 ? \"Cart Is Empty\":\"You Have : \" + cartItems.length +\"Product In The Basket\"}\r\n                \r\n                    <div>\r\n                        <ul className=\"nav flex-column\">\r\n                        \r\n                            {cartItems.map(item=> \r\n                            <div key={item.id}>\r\n                                <li className=\"mb-3  p-3 display-5 text-left basket-item\">{item.title} \r\n                                <p>  <b className=\"text-dark \"> {item.count} X </b> \r\n                                <b className=\"text-dark \"> {item.price} </b></p>\r\n                                 <button className=\"btn btn-danger remove-item\" onClick={()=>{this.props.handleRemoveFromCart(item)}}> \r\n                                 <i className=\"fa fa-trash \"></i> </button>\r\n                                  </li>\r\n                            </div>\r\n\r\n                            )}\r\n                        </ul>\r\n                            <h3>\r\n                        Total : {(cartItems.reduce((total,item) => total + item.price * item.count, 0)).toFixed(2)} $ </h3>\r\n                    </div>\r\n                \r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react';\n\n// components \nimport Nav from './components/nav/Nav';\nimport Products from './components/product/Products';\nimport Basket from './components/basket/Basket';\n\n// import {Provider} from 'react-redux';\n// import store from './store/store';\n\n\n\nclass App extends Component {\n\n\n    state = {\n      cartItems:[]\n    }\n    updateCartItems = (items) => \n    {\n       this.setState({\n         cartItems:items\n       })\n\n       localStorage.setItem(\"cartItems\",JSON.stringify(items));\n    }\n\n    handleRemoveFromCart = (item) => \n    {\n       const newItems = this.state.cartItems;\n       newItems.splice(newItems.indexOf(item), 1 );\n      //  console.log(newItems)\n\n       this.setState({\n         cartItems:newItems\n       })\n\n       localStorage.setItem(\"cartItems\",JSON.stringify(newItems))\n    }\n\n    componentDidMount  = ()=>\n    {\n      // if(localStorage.getItem(\"cartItems\") && localStorage.getItem(\"cartItems\") != '')\n      // {\n        this.setState({\n          cartItems:JSON.parse(localStorage.getItem(\"cartItems\"))\n        })\n      // }\n       \n    }\n  render()\n  {\n    return (\n      // <Provider store={store}>\n      <div className=\"container-fluid\">\n        \n        <Nav />\n        \n        <div className=\"row\">\n          <div className=\"col-md-8 col-sm-12\">\n            <Products cartItems={this.state.cartItems} updateCartItems={this.updateCartItems} />\n          </div>\n          <div className=\"col-md-4 col-sm-12\">\n            \n            <Basket cartItems={this.state.cartItems} handleRemoveFromCart={this.handleRemoveFromCart} />\n          </div>\n        </div>\n\n      </div>\n      // </Provider>\n    );\n  }\n  \n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}